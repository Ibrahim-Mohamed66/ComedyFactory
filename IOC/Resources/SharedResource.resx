<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="SignUpNow" xml:space="preserve">
    <value>Sign Up Now</value>
  </data>
  <data name="The brilliant team behind Comedy Factory" xml:space="preserve">
    <value>The brilliant team behind Comedy Factory</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read More</value>
  </data>
  <data name="ReadLess" xml:space="preserve">
    <value>Read Less</value>
  </data>
  <data name="SignUpMessage" xml:space="preserve">
    <value>Take the first step towards achieving your dream and becoming a comedy star!</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>More Info</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Desire" xml:space="preserve">
    <value>Desire</value>
  </data>
  <data name=" Master Category" xml:space="preserve">
    <value>Master Category</value>
  </data>
  <data name="Professor" xml:space="preserve">
    <value>Professor</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>All rights reserved to the Comedy Factory ©</value>
  </data>
  <data name="ComedyFactory" xml:space="preserve">
    <value>Comedy Factory</value>
  </data>
  <data name="TermsHeading" xml:space="preserve">
    <value>Terms and conditions for registration at the Comedy Factory
</value>
  </data>
  <data name="TermsofService" xml:space="preserve">
    <value>Terms Of Service</value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="HowToSignUp" xml:space="preserve">
    <value>How To Sign Up</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="IWantToSignUpFor" xml:space="preserve">
    <value>I want to sign up for</value>
  </data>
  <data name="ThankYouForSigningUp" xml:space="preserve">
    <value>Thank you for your signing up</value>
  </data>
  <data name="ContactMessage" xml:space="preserve">
    <value>You can expect to hear from our committee We will contact you soon</value>
  </data>
  <data name="Agree" xml:space="preserve">
    <value>Agree</value>
  </data>
  <data name="Activities" xml:space="preserve">
    <value>Activities</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="Cities" xml:space="preserve">
    <value>Cities</value>
  </data>
  <data name="SystemUsers" xml:space="preserve">
    <value>System Users</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="UploadPicture" xml:space="preserve">
    <value>Upload Picture...</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="ViewMap" xml:space="preserve">
    <value>View Map</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="All copyrights reserved to Comedy Factory" xml:space="preserve">
    <value>All copyrights reserved to Comedy Factory</value>
  </data>
  <data name="Comedy Factory Administration Panel" xml:space="preserve">
    <value>Comedy Factory Administration Panel</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Terms</value>
  </data>
  <data name="Registrations" xml:space="preserve">
    <value>Registrations</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="UpdatedAt" xml:space="preserve">
    <value>Updated At</value>
  </data>
  <data name="YesDeleteIt" xml:space="preserve">
    <value>Yes, delete it!</value>
  </data>
  <data name="Studio" xml:space="preserve">
    <value>Studio</value>
  </data>
  <data name="GoogleMaps" xml:space="preserve">
    <value>Google Maps</value>
  </data>
  <data name="DeleteSuccessful" xml:space="preserve">
    <value>Delete Successful</value>
  </data>
  <data name="ErrorWhileDeleting" xml:space="preserve">
    <value>Error while deleting</value>
  </data>
  <data name="OperationSuccessful" xml:space="preserve">
    <value>Operation Successful</value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>An error occurred</value>
  </data>
  <data name="My Account" xml:space="preserve">
    <value>My Account</value>
  </data>
  <data name="Change Password" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Sign Out" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Welcome to Comedy Factory Admin" xml:space="preserve">
    <value>Welcome to Comedy Factory Admin</value>
  </data>
  <data name="Admin panel for managing Comedy Factory content and users" xml:space="preserve">
    <value>Admin panel for managing Comedy Factory content and users</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="NameLength" xml:space="preserve">
    <value>Name must be between 3–100 character</value>
  </data>
  <data name="PhoneInvalid" xml:space="preserve">
    <value>Invalid phone number.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Invalid email address.</value>
  </data>
  <data name="EmailLength" xml:space="preserve">
    <value>Email cannot exceed 255 chars.</value>
  </data>
  <data name="AgeRequired" xml:space="preserve">
    <value>Age is required.</value>
  </data>
  <data name="AgeRange" xml:space="preserve">
    <value>Age must be between 13 and 120.</value>
  </data>
  <data name="GenderRequired" xml:space="preserve">
    <value>Gender is required</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>City is required</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>Country is required.</value>
  </data>
  <data name="DesireRequired" xml:space="preserve">
    <value>Desire is required</value>
  </data>
  <data name="YouCanExpectToHear" xml:space="preserve">
    <value>You can expect to hear from our committee. We will contact you soon.</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>Phone number is required.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="EnterYourEmail" xml:space="preserve">
    <value>Enter Your Email</value>
  </data>
  <data name="EnterYourPassword" xml:space="preserve">
    <value>Enter Your Password</value>
  </data>
  <data name="RegisterHere" xml:space="preserve">
    <value>Register here</value>
  </data>
  <data name="DontHaveAccount" xml:space="preserve">
    <value>Don’t Have Account?</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="LoginHere" xml:space="preserve">
    <value>Login Here</value>
  </data>
  <data name="AlreadyHaveAccount" xml:space="preserve">
    <value>Already have Account?</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
</root>